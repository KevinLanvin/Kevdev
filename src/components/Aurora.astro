<svg viewBox='0 0 1920 782' id='aurora'>
  <g filter='url(#auroraBlur)'>
    <path
      fill='url(#auroraGradient1)'
      d='M76.4999 -243C380.5 -31.7999 154.833 351 3.9996 516C374 432 599.167 42.3334 665.5 -142C342.5 -263.667 -227.5 -454.2 76.4999 -243Z'
    ></path>
    <path
      fill='url(#auroraGradient2)'
      d='M1635 202C1635 70.5 1907.5 -90 2030 -111C2066 32.5 1821 121.5 1810.5 224.5C1802.56 302.347 1537 406 1419 465C1470.5 318.5 1635 307.505 1635 202Z'
    ></path>
    <path
      fill='url(#auroraGradient3)'
      d='M1313 230.5C1300.6 342.9 1199.17 403.333 1150 419.5C1262.33 403.5 1487.3 345.8 1488.5 243C1489.7 140.2 1901.5 -144.5 1889 -212.5C1766.67 -156.167 1325.4 118.1 1313 230.5Z'
    ></path>
  </g>
  <defs>
    <filter
      id='auroraBlur'
      x='-200'
      y='-200'
      width='2320'
      height='994'
      filterUnits='userSpaceOnUse'
      color-interpolation-filters='sRGB'
    >
      <feFlood flood-opacity='0' result='BackgroundImageFix'></feFlood>
      <feBlend
        mode='normal'
        in='SourceGraphic'
        in2='BackgroundImageFix'
        result='shape'></feBlend>
      <feGaussianBlur stdDeviation='20' result='effect1_foregroundBlur_516_663'
      ></feGaussianBlur>
    </filter>
    <linearGradient id='auroraGradient1' x1='0' y1='0' x2='1' y2='0'>
      {
        Array.from({ length: 20 }, (k, v) => v / 20).map((offset) => {
          return (
            <stop stop-color='#86ada100' offset={offset}>
              <animate
                attributeName='stop-color'
                dur={`${Math.random() * 2 + 3}s`}
                values={(() => {
                  const colors = ["#adede980", "#c2e3e480", "#b6f2ee80", "#ffffff00"];
                  const shuffledColors = colors.sort(() => Math.random() - 0.5);
                  shuffledColors.push(shuffledColors[0]);
                  return shuffledColors.join(";");
                })()}
                repeatCount='indefinite'
              />
            </stop>
          );
        })
      }
    </linearGradient>
    <linearGradient id='auroraGradient2' x1='0' y1='0' x2='1' y2='0'>
      {
        Array.from({ length: 20 }, (k, v) => v / 20).map((offset) => {
          return (
            <stop stop-color='#86ada100' offset={offset}>
              <animate
                attributeName='stop-color'
                dur={`${Math.random() * 2 + 3}s`}
                values={(() => {
                  const colors = ["#adede980", "#c2e3e480", "#b6f2ee80", "#ffffff00"];
                  const shuffledColors = colors.sort(() => Math.random() - 0.5);
                  shuffledColors.push(shuffledColors[0]);
                  return shuffledColors.join(";");
                })()}
                repeatCount='indefinite'
              />
            </stop>
          );
        })
      }
    </linearGradient>
    <linearGradient id='auroraGradient3' x1='0' y1='0' x2='1' y2='0'>
      {
        Array.from({ length: 20 }, (k, v) => v / 20).map((offset) => {
          return (
            <stop stop-color='#86ada100' offset={offset}>
              <animate
                attributeName='stop-color'
                dur={`${Math.random() * 2 + 3}s`}
                values={(() => {
                  const colors = ["#adede980", "#c2e3e480", "#b6f2ee80", "#ffffff00"];
                  const shuffledColors = colors.sort(() => Math.random() - 0.5);
                  shuffledColors.push(shuffledColors[0]);
                  return shuffledColors.join(";");
                })()}
                repeatCount='indefinite'
              />
            </stop>
          );
        })
      }
    </linearGradient>
  </defs>
</svg>

<style lang='scss'>
  #aurora {
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
  @media screen and (max-width: 600px) {
    #aurora {
      top: 5rem;
    }
  }
</style>
